security:
    encoders:
        # password encodage
        App\Entity\User:
            algorithm: bcrypt

        # App\Entity\Admin:
        #     algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        # admin_provider:
        #     entity:
        #         class: App\Entity\Admin
        #         property: username
        user_provider:
            entity:
                class: App\Entity\User
                property: userMail
        # chain_provider:
        #     chain:
        #         providers: [user_provider, admin_provider]
                
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # backoffice:
        #     pattern: ^/
        #     anonymous: true
        #     provider: admin_provider

        #     form_login:
        #         login_path: admin_login
        #         check_path: admin_login

        #     logout:
        #         path: security_logout
        #         target: home

        main:
            anonymous: true
            lazy: true
            provider: user_provider

            form_login:
                login_path: security_login
                check_path: security_login
            
            logout:
                path: security_logout
                target: home
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # access_control:
    #     - { path: /admin, roles: ROLE_ADMIN }
    #     - { path: ^/account, roles: ROLE_USER }
